{"version":3,"file":"static/js/811.8b1373b9.chunk.js","mappings":"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","sources":["components/Copyright/index.tsx","contexts/DialogContext.tsx","components/ProjectsView/PhotoView/index.tsx","components/ProjectsView/index.tsx","screen/projectsPage.tsx"],"sourcesContent":["import React from 'react';\nimport { Typography } from '@mui/material';\n\nconst Copyright: React.FC = ()=> {\n  return (\n    <Typography variant=\"body2\" color=\"white\" align=\"center\" sx={{ pb: 3 }}>\n      {'Â© '}\n      {new Date().getFullYear()}\n      {' Jinghan Wang. All rights reserved.'}\n    </Typography>\n  )\n}\n\nexport default Copyright;","import { createContext } from 'react';\n\nexport interface DialogContextProps {\n  disabled?: boolean;\n  handleClickOpen: (url: string) => void;\n}\n\nexport const DialogContext = createContext<DialogContextProps>({\n  disabled: false,\n  handleClickOpen: () => {\n    if (process.env.NODE_ENV === 'development') {\n      console.warn('DialogContext is not defined');\n    }\n  },\n});","import React, { useContext } from 'react';\nimport Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport './slick.css'\nimport { Box, styled } from '@mui/material';\nimport { ImageContext } from '../../../contexts/WIndowContext';\n\nconst ImageBox = styled(Box)({\n  display: 'flex!important',\n  width: '100%',\n  justifyContent: 'center',\n  cursor: 'pointer',\n})\n\nconst PhotoView: React.FC<{ list: string[] }> = (detail: { list: string[] }) => {\n  const { imageHeight } = useContext(ImageContext);\n\n  const ImageTag = styled('img')({\n    height : imageHeight - 23\n  });\n\n  const settings = {\n      dots: true,\n      infinite: true,\n      speed: 500,\n      slidesToShow: 1,\n      slidesToScroll: 1,\n      adaptiveHeight: true,\n      style: {\n        height: imageHeight - 23,\n        width: '80%',\n        margin: '0 auto',\n      }\n    };\n\n  return (\n    <Slider {...settings}>\n      {detail.list.map((i, index) =>\n        <ImageBox key={index}>\n          <ImageTag\n            src={`/static/images/projects/${i}`}\n            onClick={() => window.open(`/static/images/projects/${i}`, '_blank')}\n          />\n        </ImageBox>\n      )}\n    </Slider>\n  );\n}\n\nexport default PhotoView;","import React, { useContext, useEffect, useRef } from 'react';\nimport {\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  CardMedia,\n  Collapse,\n  Divider,\n  IconButton,\n  IconButtonProps, Link,\n  List,\n  ListItem,\n  ListItemText,\n  styled,\n  Typography\n} from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport FiberManualRecordIcon from '@mui/icons-material/FiberManualRecord';\nimport { DialogContext } from '../../contexts/DialogContext';\nimport { ImageContext, WindowContext } from '../../contexts/WIndowContext';\nimport { JsonContent, LanguageContext } from '../../contexts/LanguageContext';\nimport PhotoView from './PhotoView';\n\ninterface DetailProps extends JsonContent {\n  type: string;\n  content: string | string[];\n}\n\nexport interface ProjectDetailProps extends JsonContent {\n  logo: string;\n  type: string;\n  title: string;\n  description: string;\n  content: DetailProps[];\n  link: string;\n  repo: string;\n  paper: string;\n  imageSize: number | string;\n  image: string[];\n  key: number;\n}\n\ninterface ExpandMoreProps extends IconButtonProps {\n  expand: boolean;\n}\n\nconst ExpandMore = styled((props: ExpandMoreProps) => {\n  const { expand, ...other } = props;\n  return <IconButton {...other} />;\n})(({ theme, expand }) => ({\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n  marginLeft: 'auto',\n  transition: theme.transitions.create('transform', {\n    duration: theme.transitions.duration.shortest\n  })\n}));\n\nconst compilerSentence = (i: string) => {\n  return i.split('#').map((j, index) => {\n    if (j.startsWith(':b')) return <b key={index}>{j.slice(2)}</b>\n    else if (j.startsWith(':i')) return <i key={index}>{j.slice(2)}</i>\n    else if (j.startsWith(':a')) return <Link\n      key={index}\n      href={j.slice(2).split('[')[1].split(']')[0]}\n      target=\"_blank\"\n    >\n      {j.slice(2).split('[')[0]}\n    </Link>\n    else return (<span key={index}>{j}</span>)\n  })\n}\n\nconst ProjectsPage: React.FC<ProjectDetailProps> = (detail: ProjectDetailProps) => {\n  const { disabled, handleClickOpen } = React.useContext(DialogContext);\n  const [expanded, setExpanded] = React.useState<boolean>(false);\n  const { height } = React.useContext(WindowContext);\n  const titleRef = useRef<HTMLDivElement>(null);\n  const imageRef = useRef<HTMLDivElement>(null);\n  const [ imageHeight, setImageHeight ] = React.useState(0);\n  const { content } = useContext(LanguageContext);\n  const ref = useRef<HTMLDivElement>();\n\n  useEffect(() => {\n    if (expanded) {\n      setImageHeight((height > 800 ? 0.33 : 0.25) * height)\n    } else {\n      setImageHeight(height > 800 ? 140 : 100)\n    }\n  }, [expanded, height]);\n\n  const handleWebsite = async (url: string) => {\n    if (disabled) window.open(url, '_blank');\n    else handleClickOpen(url);\n  }\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n\n    setTimeout(() => {\n      if (ref.current) {\n        window.scrollTo({\n        top: ref.current?.offsetTop as number - 80,\n        behavior: 'smooth'\n      });\n      }\n    }, 300);\n\n    if (!expanded) document.body.style.overflow = 'hidden';\n    else document.body.style.overflow = '';\n  }\n\n  return (\n    <Box sx={{ p: height > 800 ? 2 : 1, boxSizing: 'border-box' }} ref={ref}>\n      <Card sx={{ mb: 3 }}>\n        <CardHeader\n          avatar={<img src={`/static/images/logo/${detail.logo}`} style={{ height: '20px', width: 'auto', margin: 0, padding: 0 }}  alt=\"react logo\"/>}\n          title={detail.type}\n          sx={{ color : 'black' }}\n        />\n        <Divider />\n        <CardContent>\n          <Card>\n            <CardMedia\n              sx={{\n                height: imageHeight,\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'center',\n                transition: 'height 0.3s ease-in-out',\n                alignItems: 'center'\n              }}\n              ref={imageRef}\n            >\n              <ImageContext.Provider value={{ imageHeight }}>\n                {\n                  expanded\n                  ? <PhotoView list={detail.image.slice(1)} />\n                  : <img src={`/static/images/projects/${detail.image[0]}`} style={{ height: detail.imageSize }} alt=\"logo\"/>\n                }\n              </ImageContext.Provider>\n            </CardMedia>\n            <CardContent ref={titleRef}>\n              <Typography gutterBottom variant=\"h4\" component=\"div\">\n                {detail.title}\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                {compilerSentence(detail.description)}\n              </Typography>\n            </CardContent>\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n              <CardContent\n                sx={{\n                  height: height - 270 - (titleRef.current?.clientHeight ?? 0) - imageHeight,\n                  overflowY: 'auto'\n                }}\n              >\n                {(detail.content).map((i, index) => {\n                  if (i.type === 'text')\n                    return (<Typography key={index} color=\"text.secondary\" sx={{ mb: 1 }}>\n                      {compilerSentence(i.content as string)}\n                  </Typography>)\n                  else if (i.type === 'title')\n                    return (\n                      <Typography gutterBottom variant=\"h6\" sx={{ fontWeight: 600, fontFamily: 'Arial' }} key={index}>\n                        {compilerSentence(i.content as string)}\n                      </Typography>\n                    )\n                  else if (i.type === 'list')\n                    return (\n                      <List key={index}>\n                        {\n                          (i.content as string[]).map((j, indexList) => (\n                            <ListItem key={`${index}-${indexList}`} sx={{ p: 0.5 }}>\n                              <FiberManualRecordIcon sx={{ fontSize: 10, mr: 1, color: \"text.secondary\" }} />\n                              <ListItemText sx={{ color: \"text.secondary\" }} >\n                                {compilerSentence(j)}\n                              </ListItemText>\n                            </ListItem>\n                          ))\n                        }\n                      </List>\n                    )\n                  else return <></>\n                })}\n              </CardContent>\n            </Collapse>\n            <CardActions disableSpacing>\n              {detail.link && <Button size=\"small\" onClick={() => handleWebsite(detail.link)}>{content.website}</Button>}\n              {detail.repo && <Button size=\"small\" href={detail.repo} target=\"_blank\">{content.source}</Button>}\n              {detail.paper && <Button size=\"small\" href={detail.paper as string} target=\"_blank\">{content.paper}</Button>}\n              <ExpandMore\n                expand={expanded}\n                onClick={handleExpandClick}\n                aria-expanded={expanded}\n                aria-label=\"show more\"\n              >\n                <ExpandMoreIcon />\n              </ExpandMore>\n            </CardActions>\n          </Card>\n        </CardContent>\n      </Card>\n    </Box>\n  );\n}\n\nexport default ProjectsPage;","import React, { useContext } from 'react';\nimport { Box } from '@mui/material';\nimport { LanguageContext } from '../contexts/LanguageContext';\nimport ProjectsView, { ProjectDetailProps } from '../components/ProjectsView';\nimport Copyright from '../components/Copyright';\n\n\nconst ProjectsPage: React.FC = () => {\n  const { content } = useContext(LanguageContext);\n\n  return (\n    <Box height='calc(100vh - 80px)'>\n      {(content.project as ProjectDetailProps[]).map((i, index) =>\n        <ProjectsView\n          logo={i.logo}\n          type={i.type}\n          title={i.title}\n          description={i.description}\n          content={i.content}\n          link={i.link}\n          repo={i.repo}\n          paper={i.paper}\n          image={i.image}\n          imageSize={i.imageSize}\n          key={index}\n        ></ProjectsView>)\n      }\n      <Copyright />\n    </Box>\n  );\n}\n\nexport default ProjectsPage;"],"names":["Copyright","_jsxs","Typography","variant","color","align","sx","pb","children","Date","getFullYear","DialogContext","createContext","disabled","handleClickOpen","process","ImageBox","styled","Box","display","width","justifyContent","cursor","detail","imageHeight","useContext","ImageContext","ImageTag","height","settings","dots","infinite","speed","slidesToShow","slidesToScroll","adaptiveHeight","style","margin","_jsx","Slider","list","map","i","index","src","concat","onClick","window","open","ExpandMore","props","expand","other","IconButton","_ref","theme","transform","marginLeft","transition","transitions","create","duration","shortest","compilerSentence","split","j","startsWith","slice","Link","href","target","_titleRef$current$cli","_titleRef$current","React","expanded","setExpanded","WindowContext","titleRef","useRef","imageRef","setImageHeight","content","LanguageContext","ref","useEffect","p","boxSizing","Card","mb","CardHeader","avatar","logo","padding","alt","title","type","Divider","CardContent","CardMedia","alignItems","Provider","value","PhotoView","image","imageSize","gutterBottom","component","description","Collapse","in","timeout","unmountOnExit","current","clientHeight","overflowY","fontWeight","fontFamily","List","indexList","ListItem","FiberManualRecordIcon","fontSize","mr","ListItemText","_Fragment","CardActions","disableSpacing","link","Button","size","async","url","handleWebsite","website","repo","source","paper","handleExpandClick","setTimeout","_ref$current","scrollTo","top","offsetTop","behavior","document","body","overflow","ExpandMoreIcon","ProjectsPage","project","ProjectsView"],"sourceRoot":""}