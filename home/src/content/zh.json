{
  "home": "主页",
  "about": "关于",
  "contact": "联系方式",
  "projects": "项目",
  "name": "王靖涵",
  "morning": "早上好，",
  "afternoon": "下午好，",
  "evening": "晚上好，",
  "video": "视频",
  "welcome": "欢迎来到我的个人网站",
  "aboutme": "关于我",
  "website": "网页",
  "friend": "友情链接",
  "portfolios": "作品集",
  "paper": "论文",
  "source": "源代码",
  "jumpTitle": "服务器响应可能存在延迟",
  "jumpContent": "网站从服务器接收响应时可能存在轻微的延迟。因此，如果点击按钮后没有立即反应，请耐心等待一会儿～",
  "jumpButton": "我明白",
  "jumpDismiss": "不再显示",
  "project": [
    {
      "logo": "/logo512.png",
      "type": "React",
      "title": "My Airbnb",
      "description": "类似于 #:aAirbnb[https://www.airbnb.com.au/]# 的房屋交易Web应用。",
      "content": [
        {
          "type": "title",
          "content": "功能描述："
        },
        {
          "type": "text",
          "content": "项目旨在为房东和租房者提供一个便捷的中间平台，允许使房东能够公开他们的房屋信息，而租房者则可以方便地浏览、查询和预订这些房源。具体来说，该应用支持以下功能："
        },
        {
          "type": "list",
          "content": [
            "用户注册与登录",
            "上传房屋图片和信息",
            "搜索与筛选功能",
            "在线预订功能"
          ]
        },
        {
          "type": "title",
          "content": "技术实现："
        },
        {
          "type": "text",
          "content": "这个项目是我使用 React 框架完成的第一个大型作业。我采用了 TypeScript 来确保代码的高质量和可维护性。在路由管理方面，我使用了 React Router 的 `BrowserRouter` 组件，创建了一个动态和响应式的单页面应用（SPA）。由于全局状态的需求并不多，我选择了 React 的 Context API 而非 Redux 来进行状态管理，这样既满足了应用需求，又保持了架构的简洁性。"
        },
        {
          "type": "text",
          "content": "在界面设计方面，我采用了 Material UI（MUI）作为主要的 UI 框架，这不仅加快了开发速度，而且保证了应用界面的现代感和响应性。"
        },
        {
          "type": "text",
          "content": "为了保证代码的稳定性和质量，我按照作业要求，利用 Jest 对三个关键组件进行了单元测试。此外，我还使用了 Cypress 进行了端到端的 UI 测试，确保了应用的整体稳定性和用户体验。"
        },
        {
          "type": "text",
          "content": "总体而言，这个项目提高了我的前端开发技能，特别是在使用 React 和相关技术栈方面，较为不足的是，对于 React 框架的使用，由于不同组件间存在大量的数据交互，为了避免过多的全局变量，我在项目中采取了将多个组件紧密耦合的策略。这种方法在一定程度上避免了全局状态的复杂管理，但降低了代码的可重用性，限制了测试的便利性。在未来的项目中，需要采用更精细的组件划分，减少组件间的耦合，以增强代码的可维护性、可测试性和扩展性。"
        }
      ],
      "link": "https://enmmmmovo.github.io/Airbnb/",
      "repo": "https://github.com/EnmmmmOvO/Airbnb",
      "imageSize": 60,
      "image": [
        "airbnb/logo.svg",
        "airbnb/1.png",
        "airbnb/2.png",
        "airbnb/3.png",
        "airbnb/4.png",
        "airbnb/5.png",
        "airbnb/6.png",
        "airbnb/7.png"
      ]
    },
    {
      "logo": "kaggle.png",
      "type": "Neural Network",
      "title": "Stable Diffusion - Image to Prompts",
      "description": "根据输入的图片生成与图片内容相符的提示词。",
      "content": [
        {
          "type": "title",
          "content": "项目概念和模型选择"
        },
        {
          "type": "text",
          "content": "本项目灵感来源于 #:aKaggle[https://www.kaggle.com/competitions/stable-diffusion-image-to-prompts]# 竞赛。我们选择了两种不同的模型进行实现和比较分析：#:iCLIP# 模型和 #:iResnet + LSTM# 模型。目标是分别训练这两个模型，然后进行宏观层面的比较，以评估它们的优势和劣势。"
        },
        {
          "type": "title",
          "content": "模型训练与优化"
        },
        {
          "type": "text",
          "content": "每个模型都是基于其各自的预训练框架构建的。在训练过程中，我们使用了 #:iAdam# 优化器和学习率调度器，以促进模型的收敛并提高整体训练结果。对于两个模型，测试集和验证集都来自 #:aHugging Face[https://huggingface.co/datasets/poloclub/diffusiondb]# 的 #:iDiffusionDB# 数据集，并进行了适当的预处理。"
        },
        {
          "type": "title",
          "content": "我的贡献 - #:iResnet + LSTM# 模型"
        },
        {
          "type": "text",
          "content": "作为团队成员，我的责任是实现和训练 #:iResnet + LSTM# 模型。主要过程包括："
        },
        {
          "type": "list",
          "content": [
            "#:b特征提取#：使用 #:iResNet-50# 模型从输入图像中提取特征。",
            "#:b特征映射#：通过线性层将这些提取的特征映射到 #:iGPT-2# 模型的输入维度。",
            "#:b文本生成#：通过 #:iLSTM# 层处理这些特征，生成图像的初始文本描述。",
            "#:b文本精炼#：使用 #:iGPT-2# 模型来精炼初始描述，形成全面的最终图像描述。"
          ]
        },
        {
          "type": "text",
          "content": "我部分的整个训练程序都在 #:iKaggle# 的 #:iGPU-P100# 上进行。"
        },
        {
          "type": "title",
          "content": "训练结果及分析"
        },
        {
          "type": "text",
          "content": "经过大约7个训练周期后，#:iResnet + LSTM# 模型的损失指标趋于稳定，没有显示出进一步的改善。与 #:iCLIP# 模型相比，与实际原始提示词存在明显的差异。确定的潜在原因包括："
        },
        {
          "type": "list",
          "content": [
            "#:b模型架构#：项目需要处理图像和文本。使用 #:iCNN#（卷积神经网络）进行图像处理，使用 #:iRNN#（循环神经网络）进行文本处理。设计用于将 #:iCNN# 输出映射到 #:iRNN# 输入的互联层可能过于僵硬。这可能导致与 #:iCLIP# 中的 #:iViT# 模型相比，特征提取和集成效果不够有效，#:iViT# 模型在图像-文本对应方面表现出色。",
            "#:b参数优化和时间限制#：由于项目时间有限，可能导致某些模型参数的调整和优化不足。这可能是训练过程中实现有效收敛所面临的挑战之一。"
          ]
        }
      ],
      "repo": "https://github.com/GATA-Chen/COMP9417_Project",
      "paper": "http://3.25.181.130/documents/9417%20Report.pdf",
      "imageSize": 80,
      "image": [
        "imageToPrompt/logo.svg",
        "imageToPrompt/1.png",
        "imageToPrompt/2.png",
        "imageToPrompt/3.png",
        "imageToPrompt/4.png"
      ]
    },
    {
      "logo": "fastapi.svg",
      "type": "FastAPI + React",
      "title": "CONEX",
      "description": "连接专业人员与项目的Web平台",
      "content": [
        {
          "type": "title",
          "content": "项目概览"
        },
        {
          "type": "text",
          "content": "该项目是一个团队合作的全栈项目，旨在为公司和专业用户创建一个 Web 平台。对于专业用户而言，平台允许他们申请参加并对各个项目进行评价。对于公司用户，平台提供了创建和审批项目的功能。"
        },
        {
          "type": "title",
          "content": "前端和后端技术"
        },
        {
          "type": "text",
          "content": "在前端，我们选择了动态且用户友好的 #:iReact# 框架。后端使用 #:iFastAPI#、#:iSQLAlchemy# 和 #:iSQLite3# 开发，这些技术共同增强了数据库和后端操作之间的交互。"
        },
        {
          "type": "title",
          "content": "平台特性"
        },
        {
          "type": "list",
          "content": [
            "用户注册和登录。",
            "公司用户发布项目和申请筛选。",
            "专业用户的项目申请功能。",
            "用户之间的互评系统。"
          ]
        },
        {
          "type": "title",
          "content": "我在项目中的任务"
        },
        {
          "type": "list",
          "content": [
            "后端开发，重点是数据库的设计和实现。",
            "邮件功能的设计和部署。",
            "开发特定的前端页面，包括邮件中URL重定向的逻辑。"
          ]
        },
        {
          "type": "title",
          "content": "数据库设计和后端逻辑"
        },
        {
          "type": "text",
          "content": "数据库设计和基本后端逻辑在#:a这份文档[http://3.25.181.130/documents/backgorund%20logic.pdf]#中有详细说明。我们在数据库交互中遵循了并发原则，使用会话进行并发控制和 #:iSQLAlchemy# 事务进行并发数据库管理。"
        },
        {
          "type": "title",
          "content": "邮件功能和前端实现"
        },
        {
          "type": "text",
          "content": "对于邮件组件，我们使用了 #:iPython# 的 #:iSMTP# 库来发送带有直接用户访问 #:iURL# 的电子邮件。在前端，我们使用了 #:iReact# 的路由器来管理 #:iURL# 重定向，使用户在登录后能够返回到之前的页面。"
        }
      ],
      "imageSize": 80,
      "image": [
        "conex/logo.svg",
        "conex/1.png",
        "conex/2.png",
        "conex/3.png",
        "conex/4.png",
        "conex/5.png",
        "conex/6.png",
        "conex/7.png",
        "conex/8.png",
        "conex/9.png",
        "conex/10.png",
        "conex/11.png",
        "conex/12.png"
      ]
    },
    {
      "logo": "js.svg",
      "type": "Vanilla JS",
      "title": "Slackr",
      "description": "支持信息与图片分享多功能的社交与通讯平台",
      "content": [
      ],
      "link": "https://enmmmmovo.github.io/Slackr/",
      "repo": "https://github.com/EnmmmmOvO/Slackr",
      "imageSize": 50,
      "image": [
        "slackr/logo.svg",
        "slackr/2.png",
        "slackr/1.png",
        "slackr/3.png",
        "slackr/4.png",
        "slackr/5.png",
        "slackr/6.png",
        "slackr/7.png"
      ]
    }
  ],
  "portfolio": [
    {
      "logo": "astronomy.svg",
      "type": "宇宙",
      "title": "奇妙的天体",
      "paper": "http://3.25.181.130/documents/APOD.pdf",
      "description": "这是一本面向对宇宙知识几乎没有或完全没有了解的读者的科普杂志。它的主要目的是介绍构成广阔宇宙的各种天体（星星、行星、卫星），讨论它们的类型、结构和可能的演变过程。内容中可能存在非专业的解释或不准确之处，欢迎提出更正或澄清。",
      "image": "galaxy.png"
    },
    {
      "logo": "computer.svg",
      "type": "计算机伦理",
      "title": "功利主义与自动驾驶汽车",
      "paper": "http://3.25.181.130/documents/utilitarianism_and_autonomous_vehicles.pdf",
      "description": "本主题的主要论点是比较行为功利主义和规则功利主义如何以不同的方式影响自动驾驶汽车碰撞避免协议的发展，其中行为功利主义侧重于个别情境决策，而规则功利主义强调遵守预定的规则。",
      "image": "utilitarianism.png"
    },
    {
      "logo": "computer.svg",
      "type": "计算机伦理",
      "title": "自动驾驶汽车中的伦理与效率平衡：功利主义视角",
      "paper": "http://3.25.181.130/documents/Drawing_AI.pdf",
      "description": "本文探讨了在自动驾驶汽车的碰撞避免协议中应用行为功利主义和规则功利主义的伦理考量，分析了每种方法对关键情境下决策的影响，并评估了它们对社会规范和自动驾驶技术设计的影响。",
      "image": "drawingAI.png"
    }
  ]
}